name: CI/CD Pipeline for my-app

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

env:
  IMAGE_TAG: smabramovvv/my-app
  RELEASE_NAME: myapp
  NAMESPACE: my-app

jobs:
  build-and-push:
    name: Build Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract version from tag or commit message
        run: |
          echo "GITHUB_REF: ${GITHUB_REF}"
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION=$(git log -1 --pretty=format:%B | grep -Eo '[0-9]+\.[0-9]+\.[0-9]+' || echo "")
          fi
          if [[ -z "$VERSION" ]]; then
            echo "No version found in the commit message or tag"
            exit 1
          fi
          VERSION=${VERSION//[[:space:]]/}  # Remove any spaces
          echo "Using version: $VERSION"
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.IMAGE_TAG }}:${{ env.VERSION }}

  deploy:
    needs: build-and-push
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/main') || startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: List files in the working directory
        run: |
          ls -la

      - name: Set up Kubernetes
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.21.0'

      - name: Extract version from tag or commit message
        run: |
          echo "GITHUB_REF: ${GITHUB_REF}"
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION=$(git log -1 --pretty=format:%B | grep -Eo '[0-9]+\.[0-9]+\.[0-9]+' || echo "")
          fi
          if [[ -z "$VERSION" ]]; then
            echo "No version found in the commit message or tag"
            exit 1
          fi
          VERSION=${VERSION//[[:space:]]/}  # Remove any spaces
          echo "Using version: $VERSION"
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Replace image tag in deployment.yaml
        run: |
          if [ ! -f ./deploy/app-deployment.yml ]; then
            echo "deployment.yaml not found in the current directory"
            exit 1
          fi
          sed -i "s|image: smabramovvv/my-app:.*|image: ${{ env.IMAGE_TAG }}:${{ env.VERSION }}|" ./deploy/app-deployment.yml

      - name: Create kubeconfig
        run: |
          mkdir -p $HOME/.kube/

      - name: Authenticate to Kubernetes cluster
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG }}
        run: |
          echo "${KUBE_CONFIG}" | base64 --decode > ${HOME}/.kube/config
          kubectl config view
          kubectl get nodes

      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f ./deploy/app-deployment.yml
          kubectl get daemonsets -n my-app
          kubectl get pods -n my-app
          kubectl describe daemonset myapp -n my-app
          kubectl describe service my-app -n my-app
